{\rtf1\ansi\ansicpg949\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 from detectron2.engine import DefaultTrainer\
cfg = get_cfg()\
cfg.merge_from_file(model_zoo.get_config_file("COCO-Detection/faster_rcnn_R_101_FPN_3x.yaml"))\
cfg.DATASETS.TRAIN = ("snack-data-train",)\
cfg.DATASETS.TEST = ()\
cfg.DATALOADER.NUM_WORKERS = 1 # \uc0\u49324 \u50857 \u54624  \u53076 \u50612 \u49688 \
cfg.MODEL.WEIGHTS = model_zoo.get_checkpoint_url("COCO-Detection/faster_rcnn_R_101_FPN_3x.yaml") # Let training initialize from model zoo\
cfg.SOLVER.IMS_PER_BATCH = 10  # This is the real "batch size" commonly known to deep learning people\
cfg.SOLVER.BASE_LR = 0.00025  # pick a good LR\
cfg.SOLVER.MAX_ITER = 10000 # 300 iterations seems good enough for this toy dataset; you will need to train longer for a practical dataset\
cfg.SOLVER.STEPS = []        # do not decay learning rate\
cfg.MODEL.ROI_HEADS.BATCH_SIZE_PER_IMAGE = 64   # The "RoIHead batch size". 128 is faster, and good enough for this toy dataset (default: 512)\
cfg.MODEL.ROI_HEADS.NUM_CLASSES = 50  # only has one class (ballon). (see https://detectron2.readthedocs.io/tutorials/datasets.html#update-the-config-for-new-datasets)\
# NOTE: this config means the number of classes, but a few popular unofficial tutorials incorrect uses num_classes+1 here.}